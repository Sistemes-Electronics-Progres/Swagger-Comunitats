swagger: "2.0"
info:
  description: "Swagger API for Comunitats"
  version: "1.0.0"
  title: "AGRONIC BIT NET API"
  termsOfService: ""
  contact:
    email: "info@progres.es"
host: "beta.progres.com"
basePath: "/v1"
tags:
- name: "Fertilizantes"
  description: "--"
- name: "General"
  description: "--"
- name: "Programas"
  description: "--"
- name: "Sensores Analogicos"
  description: "--"
- name: "Sectores"
  description: "--"
- name: "Condicionantes"
  description: "--"
- name: "Sensores Digitales"
  description: "--"
- name: "Sensores Contadores"
  description: "--"
- name: "Usuarios"
  description: "--"
- name: "Hidrantes"
  description: "--"
schemes:
- "https"
paths:
  /equipos/{id_equipo}/hidrantes:
    get:
      tags:
      - "Hidrantes"
      summary: "Obtener array de Hidrantes"
      description: ""
      operationId: "getHidrantes"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Hidrantes encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hidrantes"
  /equipos/{id_equipo}/hidrantes/{id_hidrante}:
    get:
      tags:
      - "Hidrantes"
      summary: "Obtener hidrante por ID"
      description: ""
      operationId: "getHidranteId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_hidrante"
        in: "path"
        description: "ID del hidrante"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Usuario encontrado"
          schema:
              $ref: "#/definitions/Hidrantes"
    post:
      tags:
      - "Hidrantes"
      summary: "Enviar hidrante al equipo"
      description: ""
      operationId: "enviarHidrante"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_hidrante"
        in: "path"
        description: "ID del hidrante"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del hidrante a enviar"
        required: true
        schema:
          $ref: "#/definitions/Hidrantes"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/Hidrantes"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/usuarios:
    get:
      tags:
      - "Usuarios"
      summary: "Obtener array de Usuarios"
      description: ""
      operationId: "getUsuarios"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Usuarios encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Usuarios"
  /equipos/{id_equipo}/usuarios/{id_usuario}:
    get:
      tags:
      - "Usuarios"
      summary: "Obtener usuario por ID"
      description: ""
      operationId: "getUsuarioId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_usuario"
        in: "path"
        description: "ID del usuario"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Usuario encontrado"
          schema:
              $ref: "#/definitions/Usuarios"
    post:
      tags:
      - "Usuarios"
      summary: "Enviar usuario al equipo"
      description: ""
      operationId: "enviarUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_usuario"
        in: "path"
        description: "ID del usuario"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del usuario a enviar"
        required: true
        schema:
          $ref: "#/definitions/Usuarios"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/Usuarios"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/sensorescontadores:
    get:
      tags:
      - "Sensores Contadores"
      summary: "Obtener array de Sensores contadores"
      description: ""
      operationId: "getSensoresContadores"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sensores contadores encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SensoresContadores"
  /equipos/{id_equipo}/sensorescontadores/{id_sensor}:
    get:
      tags:
      - "Sensores Contadores"
      summary: "Obtener Sensor contador por ID"
      description: ""
      operationId: "getSensorContadorId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sensor"
        in: "path"
        description: "ID del sensor"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sensor encontrado"
          schema:
              $ref: "#/definitions/SensoresContadores"
    post:
      tags:
      - "Sensores Contadores"
      summary: "Enviar sensor contador al equipo"
      description: ""
      operationId: "enviarSensorContador"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sensor"
        in: "path"
        description: "ID del sensor"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del sensor a enviar"
        required: true
        schema:
          $ref: "#/definitions/SensoresContadores"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/SensoresContadores"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/sensoresdigitales:
    get:
      tags:
      - "Sensores Digitales"
      summary: "Obtener array de Sensores digitales"
      description: ""
      operationId: "getSensoresDigitales"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sensores digitales encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SensoresDigitales"
  /equipos/{id_equipo}/sensoresdigitales/{id_sensor}:
    get:
      tags:
      - "Sensores Digitales"
      summary: "Obtener Sensor digital por ID"
      description: ""
      operationId: "getSensorDigitalId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sensor"
        in: "path"
        description: "ID del sensorr"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sensor encontrado"
          schema:
              $ref: "#/definitions/SensoresDigitales"
    post:
      tags:
      - "Sensores Digitales"
      summary: "Enviar sensor digital al equipo"
      description: ""
      operationId: "enviarSensorDigital"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sensor"
        in: "path"
        description: "ID del sensor"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del sensor a enviar"
        required: true
        schema:
          $ref: "#/definitions/SensoresDigitales"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/SensoresDigitales"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/condicionantes:
    get:
      tags:
      - "Condicionantes"
      summary: "Obtener array de Condicionantes"
      description: ""
      operationId: "getCondiconantes"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Condiconantes encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Condicionantes"
  /equipos/{id_equipo}/condicionantes/{id_condicionante}:
    get:
      tags:
      - "Condicionantes"
      summary: "Obtener Condicionante por ID"
      description: ""
      operationId: "getCondicionanteId"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_condicionante"
        in: "path"
        description: "ID del condicionante"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Condicionante encontrado"
          schema:
              $ref: "#/definitions/Condicionantes"
    post:
      tags:
      - "Condicionantes"
      summary: "Enviar Condicionante al equipo"
      description: ""
      operationId: "enviarCondicionante"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_condicionante"
        in: "path"
        description: "ID del condicionante"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del condicionante a enviar"
        required: true
        schema:
          $ref: "#/definitions/Condicionantes"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/Condicionantes"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/fertilizantes:
    get:
      tags:
      - "Fertilizantes"
      summary: "Obtener array de Fertilizantes"
      description: ""
      operationId: "getFertilizantes"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Fertilizantes encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Fertilizante"
  /equipos/{id_equipo}/fertilizantes/{id_fertilizante}:
    get:
      tags:
      - "Fertilizantes"
      summary: "Obtener Fertilizante por ID"
      description: ""
      operationId: "getFertilizanteId"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_fertilizante"
        in: "path"
        description: "ID del fertilizante"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Fertilizante encontrado"
          schema:
              $ref: "#/definitions/Fertilizante"
    post:
      tags:
      - "Fertilizantes"
      summary: "Enviar fertilizante al equipo"
      description: ""
      operationId: "enviarFertilizante"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_fertilizante"
        in: "path"
        description: "ID del fertilizante"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del fertilizante a enviar"
        required: true
        schema:
          $ref: "#/definitions/Fertilizante"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/Fertilizante"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/general:
    get:
      tags:
      - "General"
      summary: "Obtener General equipo"
      description: ""
      operationId: "getGeneral"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Consulta General encontrado"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/General"
        "403":
          description: "Sin acceso al equipo"
    post:
      tags:
      - "General"
      summary: "Obtener General equipo"
      description: ""
      operationId: "postGeneral"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto General a enviar"
        required: true
        schema:
          $ref: "#/definitions/General"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Consulta General encontrado"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/General"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/fueraservicio:
    post:
      tags:
      - "Acciones manuales"
      summary: "Enviar orden fuera de servicio al equipo (on/off)"
      description: ""
      operationId: "postFueraServicio"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - in: "body"
        name: "body"
        description: "Tipo de acción a enviar"
        required: true
        schema:
          type: "object"
          properties:
            valor: 
              description: "true: Poner en fuera de servicio, false: Salir de fuera de servicio"
              type: "boolean"
              default: true
      responses:
        "405":
          description: "Invalid input"
        "200":
         description: "Acción enviada"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/stop:
      post:
        tags:
        - "Acciones manuales"
        summary: "Enviar order de paro al equipo (on/off)"
        description: ""
        operationId: "postStop"
        consumes:
        - "application/json"
        parameters:
        - name: "id_equipo"
          in: "path"
          description: "ID del equipo"
          required: true
          type: "integer"
          maximum: 99999
          minimum: 1
          format: "int64"
        - in: "body"
          name: "body"
          description: "Tipo de acción a enviar"
          required: true
          schema:
            type: "object"
            properties:
              value: 
                description: "true: Poner en paro, false: Salir del paro"
                type: "boolean"
                default: true
        responses:
          "405":
            description: "Invalid input"
          "200":
           description: "Acción enviada"
          "403":
            description: "Sin acceso al equipo"
  /equipos/{id_equipo}/cambiofecha:
      post:
        tags:
        - "Acciones manuales"
        summary: "Cambio de fecha y hora del equipo"
        description: ""
        operationId: "postReloj"
        consumes:
        - "application/json"
        parameters:
        - name: "id_equipo"
          in: "path"
          description: "ID del equipo"
          required: true
          type: "integer"
          maximum: 99999
          minimum: 1
          format: "int64"
        - in: "body"
          name: "body"
          description: "Tipo de acción a enviar"
          required: true
          schema:
            type: "object"
            properties:
              valor: 
                description: "Fecha y hora para enviar al equipo (DD/MM/yyyy HH:mm)"
                type: "string"
                format: "date-time"
        responses:
          "405":
            description: "Invalid input"
          "200":
           description: "Acción enviada"
          "403":
            description: "Sin acceso al equipo"
  /equipos/{id_equipo}/sensoresanalogicos:
    get:
      tags:
      - "Sensores Analogicos"
      summary: "Obtener array de Sensores analogicos"
      description: ""
      operationId: "getSensoresAnalogicos"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sensores analogicos encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SensorAnalogico"
  /equipos/{id_equipo}/sensoresanalogicos/{id_sensor}:
    get:
      tags:
      - "Sensores Analogicos"
      summary: "Obtener Sensor analogico por ID"
      description: ""
      operationId: "getSensorAnalogicoId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sensor"
        in: "path"
        description: "ID del sensorr"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sensor encontrado"
          schema:
              $ref: "#/definitions/SensorAnalogico"
    post:
      tags:
      - "Sensores Analogicos"
      summary: "Enviar sensor analogico al equipo"
      description: ""
      operationId: "enviarSensorAnalogico"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sensor"
        in: "path"
        description: "ID del sensor"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del sensor a enviar"
        required: true
        schema:
          $ref: "#/definitions/SensorAnalogico"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/SensorAnalogico"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/programas:
    get:
      tags:
      - "Programas"
      summary: "Obtener array de Programas"
      description: ""
      operationId: "getProgramas"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Programas encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Programas"
  /equipos/{id_equipo}/programas/{id_programa}:
    get:
      tags:
      - "Programas"
      summary: "Obtener Programa por ID"
      description: ""
      operationId: "getProgramaId"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_programa"
        in: "path"
        description: "ID del programa"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Programa encontrado"
          schema:
              $ref: "#/definitions/Programas"
    post:
      tags:
      - "Programas"
      summary: "Enviar programa al equipo"
      description: ""
      operationId: "enviarPrograma"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_programa"
        in: "path"
        description: "ID del programa"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del programa a enviar"
        required: true
        schema:
          $ref: "#/definitions/Programas"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/Programas"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"
  /equipos/{id_equipo}/sectores:
    get:
      tags:
      - "Sectores"
      summary: "Obtener array de Sectores"
      description: ""
      operationId: "getSectores"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Sectores encontrados"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sectores"
  /equipos/{id_equipo}/sectores/{id_sector}:
    get:
      tags:
      - "Sectores"
      summary: "Obtener Sector por ID"
      description: ""
      operationId: "getSectorId"
      consumes:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sector"
        in: "path"
        description: "ID del sector"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Programa encontrado"
          schema:
              $ref: "#/definitions/Sectores"
    post:
      tags:
      - "Sectores"
      summary: "Enviar sector al equipo"
      description: ""
      operationId: "enviarSector"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_equipo"
        in: "path"
        description: "ID del equipo"
        required: true
        type: "integer"
        maximum: 99999
        minimum: 1
        format: "int64"
      - name: "id_sector"
        in: "path"
        description: "ID del sector"
        required: true
        type: "integer"
        maximum: 20
        minimum: 1
        format: "int32"
      - in: "body"
        name: "body"
        description: "Objeto del sector a enviar"
        required: true
        schema:
          $ref: "#/definitions/Sectores"
      responses:
        "200":
          description: "Guardado correcto"
          schema:
            items:
              $ref: "#/definitions/Sectores"
        "405":
          description: "Invalid input"
        "403":
          description: "Sin acceso al equipo"

definitions:
  Fertilizante:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificador unico del objeto"
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificdor del equipo"
      contador:
        type: "integer"
        format: "int32"
        default: 0
      salida:
        type: "integer"
        format: "int32"
        default: 0
      caudalPrevisto:
        type: "integer"
        format: "int32"
        default: 0
      tipoUnidadFert:
        type: "integer"
        format: "int32"
        default: 0
        description: "[0:hh:mm, 1:litros, 2:litros/hectarea, 3:mm:ss]"
      usuario:
        type: "integer"
        format: "int32"
        description: "Que usuario lo esta utilizando (0:todos, 1-N usuario)"
        default: 0
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo]"
        default: 0
        readOnly: true
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true
  General:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificador unico del objeto"
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificdor del equipo"
      periodoActivo:
        type: "boolean"
        default: false
        description: "Si: Permite configurar para cada programa un periodo dentro del año operativo"
      horarioActivo:
        type: "boolean"
        default: false
        description: "Si: Permite configurar para cada programa una ventana horaria que se habilita iniciar riegos por condicionantes"
      activaciones:
        type: "boolean"
        default: false
        description: "Si: Permite configurar para cada programa si va a realizar riegos pulsados con varias activaciones separadas por un tiempo"
      volumenTiempo:
        type: "boolean"
        default: true
        description: "Si: para indicar que se quiere regar por tiempo"
      decimalesRiego:
        type: "integer"
        format: "int32"
        default: 0
        description: "[riego de 00000m3 a 000.00m3 (0 a 2)]"
      decimalesFert:
        type: "integer"
        format: "int32"
        default: 0
        description: "[Fertilizante de 00000L a 000.00L (0 a 2)]"
      salidaAlarma:
        type: "integer"
        format: "int32"
        default: 0
        description: "Salida del equipo para alarma"
      estadoAlarma:
        type: "integer"
        format: "int32"
        default: 0
        readOnly: false
        description: "Estado que se encuentra la alarma"
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true
  SensorAnalogico:
   type: "object"
   properties:
      id: 
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificador unico del objeto"
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificdor del equipo"
      entrada:
        type: "integer"
        format: "int32"
        default: 0
        description: "Numero de entrada donde va conectado el sensor"
      formato:
        type: "integer"
        format: "int32"
        default: 0
        minimum: 0
        maximum: 40
        description: "La unidad en que el sensor muestra el valor"
      tara:
        type: "integer"
        format: "int32"
        default: 0
        description: "Valor que permite ajustar el sensor a las  condiciones reales. Restricciones: Misma unidad que el formato seleccionado"
      tiempoEntreLecturas:
        type: "integer"
        format: "int32"
        default: 0
        description: "Tiempo entre lecturas en minutos para realizar la lectura del sensor"
      tiempoLectura:
        type: "integer"
        format: "int32"
        default: 0
        minimum: 1
        maximum: 99
        description: "Tiempo en decimas de segundo de lectura del sensor"
      alimentacion:
        type: "integer"
        format: "int32"
        default: 0
        description: "[0:LATCH_12, 1:LATCH_22, 2:LATCH_6, 3:LATCH_9]"
      salidaVcc:
        type: "integer"
        format: "int32"
        default: 0
        description: "Salida del equipo que alimentará la sonda"
      nombre:
        type: "string"
        description: "texto identificativo del sensor"
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true
      lectura:
        type: "number"
        format: "float"
        default: 0
        description: "Valor de lectura del sensor"
        readOnly: true
      unidad:
        type: "string"
        description: "Unidad del formato del sensor"
        readOnly: true
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true
  Programas:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
        description: "identificador unico del objeto"
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true
      TipoInicio:
        type: "integer"
        format: "int32"
        default: 1
        description: "[PROG_INI_HORAI, PROG_INI_SEQUENCIAL, PROG_INI_CONDICIONAL, PROG_INI_DISP]"
      UnidadRiego:
        type: "integer"
        format: "int32"
        default: 0
        description: "[UTS_REG_MINUTS, UTS_REG_M3, UTS_REG_M3_HA, UTS_REG_SEGONS, UTS_REG_TEMPS_HA]"
      PreRiego:
        type: "number"
        format: "float"
        default: 0
        description: "volumen o tiempo de pre riego"
      PostRiego:
        type: "number"
        format: "float"
        default: 0
        description: "volumen o tiempo de pre riego"
      Fertilizante:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de fertilizante a utilizar"
      TiempoInicios:
        type: "integer"
        format: "int32"
        default: 0
        description: "Tiempo de seguridad entre inicios (1=1min 2=2min...)"
      GrupoRiego:
        type: "integer"
        format: "int32"
        default: 0
        description: "De 0 a 9 (0 no tiene grupo de riego)"
      Texto:
        type: "string"
      Condicional1:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de condicionante que afecta al programa"
      Condicional2:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de condicionante que afecta al programa"
      Condicional3:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de condicionante que afecta al programa"      
      Condicional4:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de condicionante que afecta al programa" 
      Condicional5:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de condicionante que afecta al programa"
      Sector1:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de sector para asignar al programa"
      Sector2:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de sector para asignar al programa"
      Sector3:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de sector para asignar al programa"
      Sector4:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de sector para asignar al programa"
      Inicio:
        type: "string"
        format: "date-time"
        description: "Fecha y hora  (DD/MM/yyyy HH:mm)"
      CantidadRiego:
        type: "integer"
        format: "int32"
        default: 0
        description: "Cantidad de riego en volumen o tiempo"
      CantidadFertilizante:
        type: "integer"
        format: "int32"
        default: 0
        description: "Cantidad de fertilizante en volumen o tiempo"
      TiempoRiego:
        type: "string"
        description: "tiempo de riego en minutos"
      TiempoFertilizante:
        type: "integer"
        description: "tiempo de fertilizante en minutos"
      DiasRiego:
        type: "integer"
        format: "int32"
        default: 0
        description: "Freqüencia de dias para activar el programa (0-Lunes...6-Domingo)"
      Activaciones:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de activaciones del programa"
      Frequencia:
        type: "string"
        description: "tiempo entre activaciones en minutos"
      DiaInicio:
        type: "integer"
        format: "int32"
        default: 0
        description: "Dia en que comienza el periodo activo del programa"
      MesInicio:
        type: "integer"
        format: "int32"
        default: 0
        description: "Mes en que comienza el periodo activo del programa"
      DiaFinal:
        type: "integer"
        format: "int32"
        default: 0
        description: "Dia en que finaliza el periodo activo del programa"
      MesFinal:
        type: "integer"
        format: "int32"
        default: 0
        description: "Mes en que finaliza el periodo activo del programa" 
      HorarioInicio:
        type: "integer"
        format: "int32"
        default: 0
        description: "Hora que comienza el periodo activo del programa"
      HorarioFinal:
        type: "integer"
        format: "int32"
        default: 0
        description: "Hora en que finaliza el periodo activo del programa"
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true       
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true  
      MotivoInicio:
        type: "integer"
        format: "int32"
        description: "[PROG_INICIAT_HORARI, PROG_INICIAT_SEQUENCIAL, PROG_INICIAT_COND, PROG_INICIAT_DISP, PROG_INICIAT_MANUAL]"
        default: 0
      MotivoAjornamiento:
        type: "integer"
        format: "int32"
        description: "[PROG_AJOR_GRUP, PROG_AJOR_FERT, PROG_AJOR_TEMPS, PROG_AJOR_STOP, PROG_AJOR_PARO_COND, PROG_AJOR_SECT, PROG_AJOR_MANUAL, PROG_AJOR_PARO_DEF, PROG_AJOR_HORARI_ACTIU, PROG_AJOR_SEQ_ACTIU]"
        default: 0 
      XdiasDeRiego:
        type: "integer"
        format: "int32"
        description: "Consulta de dias de riego [1=1dia, 2=dia...]"
        readOnly: true
      XActivaciones:
        type: "integer"
        format: "int32"
        description: "consulta de activaciones"
        readOnly: true
      XTiempoSuspendido:
        type: "integer"
        format: "int32"
        description: "consulta de tiempo suspendido en minuts [1=1min, 2=2min...]"
        readOnly: true
      XTiempoDeRiego:
        type: "integer"
        format: "int32"
        description: "consulta de tiempo de riego en minutos [1=1min, 2=2min..."
        readOnly: true
      XTiempoDeFertiliozante:
        type: "integer"
        format: "int32"
        description: "consulta de tiempo de fertilizante en minutos [1=1min, 2=2min..."
        readOnly: true
      XTiempoDeSeguridadInicios:
        type: "integer"
        format: "int32"
        description: "consulta de tiempo de seguridad entre inicios"
        readOnly: true
      XFrequencia:
        type: "integer"
        format: "int32"
        description: "Consulta de freqüencia de de dias de riego"
        readOnly: true
      XCantidadDeRiego:
        type: "number"
        description: "consulta de la cantida de riego"
        readOnly: true
      XCantidadDeFertilizante:
        type: "number"
        format: "float"
        description: "consulta de cantidad de fertilizante"
        readOnly: true
      XPrePostRiego:
        type: "integer"
        format: "int32"
        description: "Consulta de PRE y POST Riego"
        readOnly: true
      HacePreRiego:
        type: "boolean"
        default: "false"
        description: "consulta si hace pre-riego"
        readOnly: true
      HacePostRiego:
        type: "boolean"
        default: "false"
        description: "consulta si hace post-riego"
        readOnly: true
      Primero:
        type: "integer"
        format: "int32"
        description: "Cosulta si el primer programa forma parte de una seqüencia alterna [1=true]"
        readOnly: true
  Sectores:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificador unico del objeto"
        readOnly: true
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true 
      Salida:
        type: "integer"
        format: "int32"
        description: "numero de salida asignada al sector"
      Auxiliar:
        type: "integer"
        format: "int32"
        description: "numero de salida asignada al auxiliar del sector"
      Contador:
        type: "integer"
        format: "int32"
        description: "numero de sensor contador asignado al sector"
      TiempoGolpeAriete:
        type: "integer"
        format: "int32"
        minimum: -127
        maximum: 127
        description: "Temporización del golpe de ariete"
      CaudalPrevisto:
        type: "integer"
        format: "int32"
        description: "caudal previsto del sector (unidades según el formato caudal)"
      Area:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 65525
        description: "Area ocupada en m2"
      Texto:
        type: "string"
        description: "nombre para asignar al sector"
      General:
        type: "integer"
        format: "int32"
        minimum: 0
        description: "si tiene algun sector que le aga de general (0=no, 1 a numero de sector)"
      Hidrante:
        type: "integer"
        format: "int32"
        minimum: 0
        description: "a que hidrante/general pertenece (0=ninguno, 1 a numero hidrante)"
      Usuario:
        type: "integer"
        format: "int32"
        description: "a que usuario est asignado el sector (0=ninguna, 1 a numero de usuario"
      CoeficienteCorrector:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 255
        description: "coeficiente de corrección (de 0.00 a 2.55)"
      Cultivo:
        type: "integer"
        format: "int32"
        description: "tipo de cultivo asociado al sector"
      Longitud:
        type: "integer"
        format: "int32"
        description: "coordenada grafica (en el equipo no se entra)"
      Latitud:
        type: "integer"
        format: "int32"
        description: "coordenada grafica (en el equipo no se entra)"
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: Temporal Paro, 3: Temporal Activo]"
        default: 0
        readOnly: true 
      NumeroPrograma:
        type: "integer"
        format: "int32"
        description: "Numero de progrma en que esta asignado"
      Manual:
        type: "boolean"
        default: false
        description: "accion manual del sector (false = Automaico, true = Manual Marxa)"
      ParoMarcha:
        type: "boolean"
        default: false
        description: "accion para parar el sector en manual (false = manual paro, true = manual marxa)"
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true  
      IdSector:
        type: "integer"
        format: "int32"
        description: "indice global del sector"
      MotivoParado:
        type: "integer"
        format: "int32"
        description: "[SECT_NULL, SECT_HIDR, SECT_DISP, SECT_PROG, SECT_MANUAL, SECT_SALDO, SECT_DOTACIO]"
  Condicionantes:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificador unico del objeto"
        readOnly: true
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true    
      Funcion:
        type: "integer"
        format: "int32"
        description: "accion a relizar [FUNC_PARO_DEF, FUNC_PARO_TEMP, FUNC_PARO_COND, FUNC_INICI, FUNC_INICI_PARO, FUNC_AVIS, FUNC_MOD_REG, FUNC_MOD_FERT, FUNC_FI_PLUJA, FUNC_PARO_FERT]"
      Origen:
        type: "integer"
        format: "int32"
        description: "tipo de sensor asociado al condicionante [COND_ORG_SDIG, COND_ORG_SANA, COND_ORG_SCON, COND_ORG_CABAL]"
      Sensor:
        type: "integer"
        format: "int32"
        minimum: 1
        description: "numero de sensor asociado"
      Texto:
        type: "string"
        description: "Nombre del condicionante"
      Retardo:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 9999
        description: "Retardo a la deteccion en segundos (1=1seg, 5=5seg...)"
      RetardoInicio:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 9999
        description: "Retardo al inicio en segundos (1=1seg, 5=5seg...)"        
      ReatardoFuga:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 9999
        description: "Retardo para marcar fuga en segundos (1=1seg, 5=5seg...)" 
      A:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 65535
        description: "Valor de referencia"
      B:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 65535
        description: "Diferencial del valor"
      C:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 100
        description: "% en que modifica el riego/fertilizante (punto 1)"
      D:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 100
        description: "% en que modifica el riego/fertilizante (punto 2)"
      E:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 255
        description: "Horas para calcular el valor integrado del condicionante"
      SMSA:
        type: "boolean"
        default: false
        description: "true, envia SMS al telefono A"
      SMSB:
        type: "boolean"
        default: false
        description: "true, envia SMS al telefono B"
      SMSC:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de texto a enviar al telefono C"
      Alarma:
        type: "boolean"
        default: false
        description: "true, Activa la alarma"
      Anomalia:
        type: "boolean"
        default: false
        description: "true, marca anomalia cada vez que se activa el condicionante"
      TodosProgramas:
        type: "boolean"
        default: false
        description: "true, el condicionante afecta a todos los programas"
      Urgente:
        type: "boolean"
        default: false
        description: "true, activa el modem para enviar SMS fuera de horario"
      ConectaPC:
        type: "boolean"
        default: false
        description: "conecta con PC para enviar registros"
      EstadoError:
        type: "integer"
        format: "int32"
        description: "[COND_ERR_RES, COND_ERR_PARAT, COND_ERR_ACTIVAT]"
        readOnly: true
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true       
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true  
      EstadoCaudal:
        type: "integer"
        format: "int32"
        description: "[COND_CAB_ERROR_SP, COND_CAB_ERROR_CA, COND_CAB_CB, COND_CAB_ERROR_FG]"
        readOnly: true
      XReatardo:
        type: "integer"
        format: "int32"
        readOnly: true
      Valor:
        type: "integer"
        format: "int32"
        description: "valor del acumulado"
        readOnly: true
      ErrorSensor:
        type: "boolean"
        default: false
        readOnly: true
      EstadoCondicional:
        type: "integer"
        format: "int32"
        description: "[COND_PARAT, COND_ACTIVAT, COND_FORA_SERVEI]"
        readOnly: true
  SensoresDigitales:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificador unico del objeto"
        readOnly: true
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true   
      entrada:
        type: "integer"
        format: "int32"
        minimum: 0
        default: 0
        description: "numero de entrada asociada al sensor"
      activadoCerrado:
        type: "boolean"
        default: false
        description: "estado por defecto de la entrada (false=activación realizada con el cierre true=actuvación realizada con la apertura"
      texto:
        type: "string"
        description: "Nombre para el sensor"
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true
  SensoresContadores:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificador unico del objeto"
        readOnly: true
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true 
      entrada:
        type: "integer"
        format: "int32"
        default: 0
        description: "numero de entrada digital"
      valorPulso:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 9999999
        description: "vaslor del pulso con dos decimales"
      tiempoEntrePulsos:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 999
        description: "tiempo entre dos pulsos para pasar el caudal instantaneo a 0"
      formatoCaudal:
        type: "integer"
        format: "int32"
        description: "[CON_CAB_M3H, CON_CAB_LH, CON_CAB_LS, CON_CAB_M3G_1, CON_CAB_LH1, CON_CAB_LS1]"
      texto:
        type: "string"
        description: "nombre del contador"
      tipo:
        type: "integer"
        format: "int32"
        description: "[SCON_DIGITAL, SCON_ANALOGIC, SCON_FREQUENCIA, SCON_PLUVIOMETRE]"
      puntoReferenciaReal1:
        type: "integer"
        format: "int32"
        description: "valor en mili voltios para calcular el caudal instantaneo de un sensor contador analogico"
      puntoReferenciaReal2:
        type: "integer"
        format: "int32"
        description: "valor en mili voltios para calcular el caudal instantaneo de un sensor contador analogico"
      puntoLogico1:
        type: "integer"
        format: "int32"
        description: "valor logico para calcular el caudal instantaneo de un sensor contador analogico"
      puntoLogico2:
        type: "integer"
        format: "int32"
        description: "valor logico para calcular el caudal instantaneo de un sensor contador analogico"
      usadoPor:
        type: "integer"
        format: "int32"
        description: "[CON_USAT_NINGU, CON_USAT_REG, CON_USAT_FERT]"  
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true  
      caudalInstantaneo:
        type: "integer"
        format: "int32"
        description: "lectura del caudal"
        readOnly: true
      lectura:
        type: "integer"
        format: "int32"
        description: "consumo del contador, en m3 o l/m2"
        readOnly: true
      dataLectura:
        type: "string"
        format: "date-time"
        readOnly: true
        description: "data desde cuando es valida la lectura"
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true
      tiempNoUsoPorFuga:
        type: "integer"
        format: "int32"
        description: "tiempo que tiene de pasar antes de iniciar el control de fuga (se guarda minutos"
  Usuarios:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificador unico del objeto"
        readOnly: true
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true 
      ident:
        type: "integer"
        format: "int32"
        description: "codigo para acceder fisicamente en el equipo"
      password:
        type: "integer"
        format: "int32"
        description: "password para acceder fisicamente en el equipo"
      diasFrequencia:
        type: "boolean"
        default: false
        description: "true, para trabajar por dias de semana false, para trabajar por frequencia de dias"
      sequencialesAlternos:
        type: "boolean"
        default: false
        description: "true, los programas van alternando el inicio"
      estado:
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true  
      saldo:
        type: "integer"
        format: "int32"
        description: "dinero que queda para regar"
      dotacion:
        type: "integer"
        format: "int32"
        description: "volumen que queda en m3"
      modificadoUsuario:
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificadoUsuario:
        type: "string"
        format: "date-time"
        readOnly: true    
      modificadoGestor:
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificadoGestor:
        type: "string"
        format: "date-time"
        readOnly: true    
      texto:
        type: "string"
        description: "nombre del usuario"
  Hidrantes:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificador unico del objeto"
        readOnly: true
      idEquipo:
        type: "integer"
        format: "int32"
        default: 1
        description: "identificdor del equipo"
        readOnly: true
      tipoValvula:
        type: "integer"
        format: "int32"
        description: "[HIDR_VALV_CAP, HIDR_VALV_HIDRAULICA, HIDR_VALV_MOTORIZADA]"
      salidaAbrir:
        type: "integer"
        format: "int32"
        description: "salida para abrir y cerrar si es hidraulica, si es motorizada para abrir"
      salidaCerrar:
        type: "integer"
        format: "int32"
        description: "salida para cerra solo la motorizada"
      contador:
        type: "integer"
        format: "int32"
        description: "contador generald del hidrante"
      sectorActivos:
        type: "integer"
        format: "int32"
        description: "numero maximo de sectores que pueden regar simultaneamente"
      tiempoMarcha:
        type: "integer"
        format: "int32"
        description: "retardo de marcha despues del activar el primer sector"
      tiempoParo:
        type: "integer"
        format: "int32"
        description: "retardo al paro despues del ultimo sector activo"
      paroSectores:
        type: "integer"
        format: "int32"
        description: "primero para los sectores y por ultimo hace el tiempro de paro a los sectores"
      regulaCaudal:
        type: "integer"
        format: "int32"
        description: "1=regula el caudal en motorizada"
      errorMaximo:
        type: "integer"
        format: "int32"
        description: "error maximo permitido son mover la motorizada"
      tiempoTotal:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 9999
        description: "tiempo total para abrir y cerrar"
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true  
      refCaudal:
        type: "integer"
        format: "int32"
        description: "suma los caudales previstos en los sectores que estan activos"
      numSector:
        type: "integer"
        format: "int32"
        description: "numero de sectores activos"
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true
      idHidrante:
        type: "integer"
        format: "int32"
        readOnly: true
      texto:
        type: "string"
      origenReferencia:
        type: "integer"
        format: "int32"
        description: "[HIDR_REF_SECTOR, HIDR_REF_SANA]"
      senAnalReferencia:
        type: "integer"
        format: "int32"
        description: "motorizada regulada con origen sensor analogico"
      finCarreraAbrir:
        type: "integer"
        format: "int32"
        description: "entrada digital para final de carrera (solo motorizada)"
      finCarreraCerrar:
        type: "integer"
        format: "int32"
        description: "entrada digital para final de carrera (solo motorizada)"       
      tiempoExtra:
        type: "integer"
        format: "int32"
        description: "tiempo extra que mantiene en movimiento la valvula despues del final de carrera"
      
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        default: 1
        readOnly: true
      type:
        type: "string"
      message:
        type: "string"
      Date:
        type: "string"
        format: "date-time"
        description: "Fecha y hora para enviar al equipo (DD/MM/yyyy HH:mm)"
      modificado: 
        type: "integer"
        format: "int32"
        description: "[0:Modificado Pc, 1:Enviando, 2:Enviado, 3:Modificado equipo]"
        default: 0
        readOnly: true
      fechaModificado:
        type: "string"
        format: "date-time"
        readOnly: true       
      estado: 
        type: "integer"
        format: "int32"
        description: "[0: Parado, 1: Activo, 2: ERROR MAX, 3: ERROR MIN, 4: ERROR]"
        default: 0
        readOnly: true  
